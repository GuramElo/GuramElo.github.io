(self.webpackChunkcu_std_plat=self.webpackChunkcu_std_plat||[]).push([[8873],{8873:(P,w,l)=>{l.r(w),l.d(w,{ServiceWorkerModule:()=>I,SwPush:()=>E,SwRegistrationOptions:()=>g,SwUpdate:()=>v,provideServiceWorker:()=>M});var c=l(3083),b=l(9853),o=l(4866),s=l(2778);const h="Service workers are disabled or not supported by this browser";class d{constructor(n){if(this.serviceWorker=n,n){const r=(0,o.fromEvent)(n,"controllerchange").pipe((0,s.map)(()=>n.controller)),i=(0,o.defer)(()=>(0,o.of)(n.controller)),p=(0,o.concat)(i,r);this.worker=p.pipe((0,s.filter)(u=>!!u)),this.registration=this.worker.pipe((0,s.switchMap)(()=>n.getRegistration()));const T=(0,o.fromEvent)(n,"message").pipe((0,s.map)(u=>u.data)).pipe((0,s.filter)(u=>u&&u.type)).pipe((0,s.publish)());T.connect(),this.events=T}else this.worker=this.events=this.registration=function _(t){return(0,o.defer)(()=>(0,o.throwError)(new Error(t)))}(h)}postMessage(n,e){return this.worker.pipe((0,s.take)(1),(0,s.tap)(r=>{r.postMessage({action:n,...e})})).toPromise().then(()=>{})}postMessageWithOperation(n,e,r){const i=this.waitForOperationCompleted(r),p=this.postMessage(n,e);return Promise.all([p,i]).then(([,a])=>a)}generateNonce(){return Math.round(1e7*Math.random())}eventsOfType(n){let e;return e="string"==typeof n?r=>r.type===n:r=>n.includes(r.type),this.events.pipe((0,s.filter)(e))}nextEventOfType(n){return this.eventsOfType(n).pipe((0,s.take)(1))}waitForOperationCompleted(n){return this.eventsOfType("OPERATION_COMPLETED").pipe((0,s.filter)(e=>e.nonce===n),(0,s.take)(1),(0,s.map)(e=>{if(void 0!==e.result)return e.result;throw new Error(e.error)})).toPromise()}get isEnabled(){return!!this.serviceWorker}}let E=(()=>{class t{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,this.pushManager=null,this.subscriptionChanges=new o.Subject,!e.isEnabled)return this.messages=o.NEVER,this.notificationClicks=o.NEVER,void(this.subscription=o.NEVER);this.messages=this.sw.eventsOfType("PUSH").pipe((0,s.map)(i=>i.data)),this.notificationClicks=this.sw.eventsOfType("NOTIFICATION_CLICK").pipe((0,s.map)(i=>i.data)),this.pushManager=this.sw.registration.pipe((0,s.map)(i=>i.pushManager));const r=this.pushManager.pipe((0,s.switchMap)(i=>i.getSubscription()));this.subscription=(0,o.merge)(r,this.subscriptionChanges)}requestSubscription(e){if(!this.sw.isEnabled||null===this.pushManager)return Promise.reject(new Error(h));const r={userVisibleOnly:!0};let i=this.decodeBase64(e.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),p=new Uint8Array(new ArrayBuffer(i.length));for(let a=0;a<i.length;a++)p[a]=i.charCodeAt(a);return r.applicationServerKey=p,this.pushManager.pipe((0,s.switchMap)(a=>a.subscribe(r)),(0,s.take)(1)).toPromise().then(a=>(this.subscriptionChanges.next(a),a))}unsubscribe(){return this.sw.isEnabled?this.subscription.pipe((0,s.take)(1),(0,s.switchMap)(r=>{if(null===r)throw new Error("Not subscribed to push notifications.");return r.unsubscribe().then(i=>{if(!i)throw new Error("Unsubscribe failed!");this.subscriptionChanges.next(null)})})).toPromise():Promise.reject(new Error(h))}decodeBase64(e){return atob(e)}static#e=this.\u0275fac=function(r){return new(r||t)(c.\u0275\u0275inject(d))};static#t=this.\u0275prov=c.\u0275\u0275defineInjectable({token:t,factory:t.\u0275fac})}return t})(),v=(()=>{class t{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,!e.isEnabled)return this.versionUpdates=o.NEVER,void(this.unrecoverable=o.NEVER);this.versionUpdates=this.sw.eventsOfType(["VERSION_DETECTED","VERSION_INSTALLATION_FAILED","VERSION_READY","NO_NEW_VERSION_DETECTED"]),this.unrecoverable=this.sw.eventsOfType("UNRECOVERABLE_STATE")}checkForUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(h));const e=this.sw.generateNonce();return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES",{nonce:e},e)}activateUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(h));const e=this.sw.generateNonce();return this.sw.postMessageWithOperation("ACTIVATE_UPDATE",{nonce:e},e)}static#e=this.\u0275fac=function(r){return new(r||t)(c.\u0275\u0275inject(d))};static#t=this.\u0275prov=c.\u0275\u0275defineInjectable({token:t,factory:t.\u0275fac})}return t})();const O=new c.InjectionToken("");function S(t,n,e,r){return()=>{if(!(0,b.isPlatformBrowser)(r)||!("serviceWorker"in navigator)||!1===e.enabled)return;let i;if(navigator.serviceWorker.addEventListener("controllerchange",()=>{null!==navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"INITIALIZE"})}),"function"==typeof e.registrationStrategy)i=e.registrationStrategy();else{const[a,...f]=(e.registrationStrategy||"registerWhenStable:30000").split(":");switch(a){case"registerImmediately":i=(0,o.of)(null);break;case"registerWithDelay":i=y(+f[0]||0);break;case"registerWhenStable":i=f[0]?(0,o.merge)(m(t),y(+f[0])):m(t);break;default:throw new Error(`Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`)}}t.get(c.NgZone).runOutsideAngular(()=>i.pipe((0,s.take)(1)).subscribe(()=>navigator.serviceWorker.register(n,{scope:e.scope}).catch(a=>console.error("Service worker registration failed with:",a))))}}function y(t){return(0,o.of)(null).pipe((0,s.delay)(t))}function m(t){return t.get(c.ApplicationRef).isStable.pipe((0,s.filter)(e=>e))}function C(t,n){return new d((0,b.isPlatformBrowser)(n)&&!1!==t.enabled?navigator.serviceWorker:void 0)}class g{}function M(t,n={}){return(0,c.makeEnvironmentProviders)([E,v,{provide:O,useValue:t},{provide:g,useValue:n},{provide:d,useFactory:C,deps:[g,c.PLATFORM_ID]},{provide:c.APP_INITIALIZER,useFactory:S,deps:[c.Injector,O,g,c.PLATFORM_ID],multi:!0}])}let I=(()=>{class t{static register(e,r={}){return{ngModule:t,providers:[M(e,r)]}}static#e=this.\u0275fac=function(r){return new(r||t)};static#t=this.\u0275mod=c.\u0275\u0275defineNgModule({type:t});static#r=this.\u0275inj=c.\u0275\u0275defineInjector({providers:[E,v]})}return t})()}}]);